/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SignupLazyImport = createFileRoute('/signup')()
const LoginLazyImport = createFileRoute('/login')()
const HelpLazyImport = createFileRoute('/help')()
const ControllerLazyImport = createFileRoute('/controller')()
const AnalyticsLazyImport = createFileRoute('/analytics')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const HelpLazyRoute = HelpLazyImport.update({
  path: '/help',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/help.lazy').then((d) => d.Route))

const ControllerLazyRoute = ControllerLazyImport.update({
  path: '/controller',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/controller.lazy').then((d) => d.Route))

const AnalyticsLazyRoute = AnalyticsLazyImport.update({
  path: '/analytics',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/analytics.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsLazyImport
      parentRoute: typeof rootRoute
    }
    '/controller': {
      id: '/controller'
      path: '/controller'
      fullPath: '/controller'
      preLoaderRoute: typeof ControllerLazyImport
      parentRoute: typeof rootRoute
    }
    '/help': {
      id: '/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/analytics': typeof AnalyticsLazyRoute
  '/controller': typeof ControllerLazyRoute
  '/help': typeof HelpLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/analytics': typeof AnalyticsLazyRoute
  '/controller': typeof ControllerLazyRoute
  '/help': typeof HelpLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/analytics': typeof AnalyticsLazyRoute
  '/controller': typeof ControllerLazyRoute
  '/help': typeof HelpLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/analytics' | '/controller' | '/help' | '/login' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/analytics' | '/controller' | '/help' | '/login' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/analytics'
    | '/controller'
    | '/help'
    | '/login'
    | '/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AnalyticsLazyRoute: typeof AnalyticsLazyRoute
  ControllerLazyRoute: typeof ControllerLazyRoute
  HelpLazyRoute: typeof HelpLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  SignupLazyRoute: typeof SignupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AnalyticsLazyRoute: AnalyticsLazyRoute,
  ControllerLazyRoute: ControllerLazyRoute,
  HelpLazyRoute: HelpLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  SignupLazyRoute: SignupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analytics",
        "/controller",
        "/help",
        "/login",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/analytics": {
      "filePath": "analytics.lazy.tsx"
    },
    "/controller": {
      "filePath": "controller.lazy.tsx"
    },
    "/help": {
      "filePath": "help.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
